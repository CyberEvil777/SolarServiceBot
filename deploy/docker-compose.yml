# Use postgres/example user/password credentials
version: '3.1'

services:
  admin:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    volumes:
      - media_volume:/usr/src/app/media/
      - static_volume:/usr/src/app/static/
    expose:
      - 80
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=solar_bot
      - POSTGRES_USER=solar_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=the-most-secret
    ports:
      - "81:8001"
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data_doc_bot:/var/lib/postgresql/data/
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=solar_bot
      - POSTGRES_USER=solar_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432

  bot:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    command: python manage.py bot_polling
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=solar_bot
      - POSTGRES_USER=solar_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - BOT_TOKEN=6099478249:AAFuE2TexFO9nt1M1tKnLrnmhRTtlWeABxM

  # Redis
  redis:
    image: redis:5-alpine
    ports:
      - "6379:6379"

  # Celery worker
  worker:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    command: celery -A src.src worker --beat --loglevel=INFO -Q default
    volumes:
      - .:/code:Z
    links:
      - db
      - redis
    depends_on:
      - redis


  worker_beat:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    command: celery -A src.src beat --loglevel=INFO
    volumes:
      - .:/code:Z
    links:
      - db
      - redis
    depends_on:
      - redis


volumes:
  postgres_data_doc_bot:
  media_volume:
  static_volume:
